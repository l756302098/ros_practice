<launch>
<!--
  <include file="$(find yd_obstacle_avoid)/launch/navigation.launch" />
-->
  <node pkg="yd_obstacle_avoid" type="intelligent_plan_node" name="intelligent_plan_node" output="screen" respawn="false" >
    <param name="localmap_topic" value="/move_base/global_costmap/costmap" />
    <param name="odom_topic" value="/robot_pose" />
    <param name="task_topic" value="/task_status" />

    <param name="robot_width" value="0.5" />
    <param name="detection_length" value="2.0" />
    <param name="road_min" value="3.0" />
    <!-- smoother -->
    <param name="raw_cmd_vel_topic" value="/cmd_vel" />
    <param name="smooth_cmd_vel_topic" value="/yida/robot/motor_control" />
    <param name="robot_odom_topic" value="" />
    <param name="smoother_frequency" value="50" />
    <param name="v_max_vel" value="0.3" />
    <param name="v_min_vel" value="-0.05" />
    <param name="v_max_acc" value="2" />
    <param name="v_min_acc" value="-2" />
    <param name="v_jeck" value="2.0" />
    <param name="a_max_vel" value="0.5" />
    <param name="a_min_vel" value="-0.5" />
    <param name="a_max_acc" value="5" />
    <param name="a_min_acc" value="-5" />
    <param name="a_jeck" value="5.0" />
    <!-- pointcloud to laserscan -->
    <param name="pc2laser_frequency" value="10" />
    <!-- Min and max height to sample from depth data - these values worked for my drone -->
    <param name="min_height" value="0"/>
    <param name="max_height" value="2"/>
    <!-- Min and max range range of generated laser scan - set this to match your depth sensor -->
    <param name="range_min" value="0.2"/>
    <param name="range_max" value="5.0"/>
    <param name="transform_tolerance" value="1.0"/>
    <!-- Frame of your depth sensor -->
    <param name="target_frame" value="base_link"/>
    <param name="transfrom_frame" value="velodyne"/>
    <!-- Topic from which to read PointCloud2 -->
    <param name="cloud_topic" value="/velodyne_points"/>
    <!-- Topic to which LaserScan will be published -->
    <param name="scan_topic" value="/velodyne_scan"/>
  </node>
<!--
  <include file="$(find yd_obstacle_avoid)/launch/velocity_smoother.launch" />
-->
</launch>
